environment:

  # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
  # /E:ON and /V:ON options are not enabled in the batch script interpreter
  # See: http://stackoverflow.com/a/13751649/163740
  CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\run_with_env.cmd"

  # Workaround for https://github.com/conda/conda-build/issues/636
  PYTHONIOENCODING: "UTF-8"

  matrix:
    - TARGET_ARCH: "x64"
      PYTHON_ARCH: "64"

    #- TARGET_ARCH: "x86"
    #  PYTHON_ARCH: "32"

# Uncomment the following two line to make any conda packages created
# available as build artifacts in AppVeyor
#artifacts:
    #- path: 'conda_packages\*.bz2'

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

install:
    # Use the pre-installed Miniconda for the desired arch
    - ps: if($env:TARGET_ARCH -eq 'x86') 
            {$root = "C:\Miniconda"}
          else 
            {$root = "C:\Miniconda-x64"}
          $env:path="$root;$root\Scripts;$root\Library\bin;$($env:path)"
    - cmd: set PYTHONUNBUFFERED=1
    - cmd: conda update -yq conda
    - cmd: conda install -yq conda-build jinja2 anaconda-client
    - cmd: conda info

# Skip .NET project specific build phase.
build: off

test_script:
    - cmd: SET PYTHON_VERSION=2.7.10
    - '%CMD_IN_ENV% conda build -q -c jjhelmus --python 2.7 --numpy 1.10 recipe' 
    - cmd: SET PYTHON_VERSION=3.3.x
    - '%CMD_IN_ENV% conda build -q -c jjhelmus --python 3.3 --numpy 1.9 recipe' 

    # copy any newly created conda packages into the conda_packages dir
    - cmd: mkdir conda_packages
    - cmd: 'copy /Y C:\Miniconda\conda-bld\win-32\*tar.bz2 conda_packages || cmd /c "exit /b 0"'
    - cmd: 'copy /Y C:\Miniconda-x64\conda-bld\win-64\*tar.bz2 conda_packages || cmd /c "exit /b 0"'
    - cmd: dir conda_packages
